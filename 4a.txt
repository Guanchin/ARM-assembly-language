Stack EQU 0x00000100
DivbyZ EQU 0xD14
SYSHNDCTRL EQU 0xD24
Usagefault EQU 0xD2A
NVICBase EQU 0xE000E000
		AREA STACK, NOINIT, READWRITE, ALIGN = 3
StackMem
		SPACE Stack
		PRESERVE8
		AREA RESET, CODE, READONLY
		THUMB
; The vector table sits here
; We’ll define just a few of them and leave the rest at 0 for now
		DCD StackMem + Stack ; Top of Stack 0x20000000
		DCD Reset_Handler ; Reset Handler
		DCD NmiISR ; NMI Handler
		DCD FaultISR ; Hard Fault Handler
		DCD IntDefaultHandler ; MPU Fault Handler
		DCD IntDefaultHandler ; Bus Fault Handler
		DCD IntDefaultHandler ; Usage Fault Handler
		EXPORT Reset_Handler
		ENTRY
Reset_Handler
		; enable the divide-by-zero trap
		; located in the NVIC
		; base: 0xE000E000
		; offset: 0xD14
		; bit: 4
		LDR r6, =NVICBase
		LDR r7, =DivbyZ
		
		;MRS r8,CONTROL
		;ORR	r8,r8,#1
		;MSR CONTROL,r8
		
		LDR r1, [r6, r7]
		ORR r1, #0x10 ; enable bit 4
		STR r1, [r6, r7]
		;now turn on the usage fault exception
		LDR r7, =SYSHNDCTRL
		LDR r1, [r6, r7]
		;ORR r1, #0x40000
		STR r1, [r6, r7]
		; try out a divide by 2 then a divide by 0!
		MOV r0, #0
		MOV r1, #0x11111111
		MOV r2, #0x22222222
		MOV r3, #0x33333333
		; this divide works just fine
		
		UDIV r4, r2, r1
		; this divide takes an exception
		UDIV r5, r3, r0
		
Exit 	B Exit
NmiISR 	B NmiISR
FaultISR 
		ldr r7,=0x200000C0
		ldr r9,=MsgH
looph	
		ldrb r8,[r9],#1
		strb r8,[r7],#1
		cmp r8,#0
		bne looph
		bx lr
		B FaultISR
IntDefaultHandler
		; let’s read the Usage Fault Status Register
		
		LDR r7, =Usagefault
		LDRH r1, [r6, r7]
		
		TST r1, #0x200
		bne Happended
		beq NotHappended
		
Happended
		ldr r8,=MsgY
		ldr r9,=0x20000040
loop1	
		ldrb r5,[r8],#1
		strb r5,[r9],#1
		cmp r5,#0
		bne loop1
		
		;MRS r8,CONTROL
		;ORR	r8,r8,#1
		;MSR CONTROL,r8
		
		bx lr
		
NotHappended
		ldr r8,=MsgN
		ldr r9,=0x20000080
loop2	
		ldrb r5,[r8],#1
		strb r5,[r9],#1
		cmp r5,#0
		bne loop2
		
		MRS r8,CONTROL
		ORR	r8,r8,#1
		MSR CONTROL,r8
		
		bx lr
done 	B done		
MsgY DCB "divide-by-0 did happen!",0
MsgN DCB "divide-by-0 did not happen",0 
MsgH DCB "Hard fault did happen!",0
		ALIGN
		
		END